// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider  = "postgresql" // Choose your database provider: postgresql, mysql, sqlite, etc.
  directUrl = env("DATABASE_URL")
  url       = env("DATABASE_URL_POOLING")
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

model User {
  id            String  @id @default(cuid())
  email         String  @unique
  password_hash String?
  role          String?

  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  
  sessions Session[]
  subscriptions Subscription[]
  websites Website[]

  @@index([password_hash])
  @@map("users")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@map("sessions")
}

model Website {
  id          String   @id @default(cuid())
  user_id     String
  name        String
  url         String
  topic       String?
  
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@map("websites")
}

model Subscription {
  id                     Int       @id @default(autoincrement())
  user_id                String
  stripe_subscription_id String    @unique // Stripe subscription ID
  status                 String // e.g., active, canceled, past_due, trialing
  current_period_start   DateTime?
  current_period_end     DateTime?
  trial_start            DateTime?
  trial_end              DateTime?
  cancel_at_period_end   Boolean   @default(false)
  canceled_at            DateTime?
  created_at             DateTime  @default(now())
  updated_at             DateTime  @updatedAt

  user User @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@index([stripe_subscription_id])
  @@map("subscriptions")
}
