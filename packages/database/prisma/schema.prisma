// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider  = "postgresql" // Choose your database provider: postgresql, mysql, sqlite, etc.
  directUrl = env("DATABASE_URL")
  url       = env("DATABASE_URL_POOLING")
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

// ===== USER & AUTHENTICATION MODELS =====

model User {
  id                 String  @id @default(cuid())
  email              String  @unique
  name               String?
  avatar_url         String?
  stripe_customer_id String? @unique // Stripe customer ID

  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  sessions      Session[]
  keys          Key[]
  subscriptions Subscription[]

  @@map("users")
}

model Session {
  id String @id

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  expiresAt DateTime // UNIX timestamp in seconds
  createdAt DateTime @default(now())

  @@map("sessions")
}

model Key {
  id             String  @id // e.g., "google:123456789"
  user           User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id        String
  providerId     String? // e.g., "google"
  providerUserId String? // e.g., "123456789"

  @@map("auth_keys")
}

model Subscription {
  id                     Int       @id @default(autoincrement())
  user_id                String
  stripe_subscription_id String    @unique // Stripe subscription ID
  status                 String // e.g., active, canceled, past_due, trialing
  current_period_start   DateTime?
  current_period_end     DateTime?
  trial_start            DateTime?
  trial_end              DateTime?
  cancel_at_period_end   Boolean   @default(false)
  canceled_at            DateTime?
  created_at             DateTime  @default(now())
  updated_at             DateTime  @updatedAt

  user User @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@index([stripe_subscription_id])
  @@map("subscriptions")
}
